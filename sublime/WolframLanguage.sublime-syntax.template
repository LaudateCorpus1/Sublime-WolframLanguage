%YAML 1.2
---

# https://www.sublimetext.com/docs/3/syntax.html
# https://www.sublimetext.com/docs/3/scope_naming.html

name: WolframLanguage

file_extensions:
  - m
  - wl
  - wls
  # FIXME: special process when rendering .nb file
  #- nb

first_line_match: ^#!.*\b(math|wolfram).*$
scope: source.wolfram

# Partly based on https://github.com/JuliaEditorSupport/Julia-sublime/blob/master/Julia.sublime-syntax

variables:
  symbol: '[$[:alpha:]]+[$[:alnum:]]*'
  identifier: (?:{{symbol}}<*"`"*>)*({{symbol}})

  # Built-in functions
  built_in_functions: |-
    (?x)
    \b(?:
      `builtInFunctions`
    )\b

  obsolete_functions: |-
    (?x)
    \b(?:
      `obsoleteFunctions`
    )\b

  undocumented_functions: |-
    (?x)
    \b(?:
      `undocumentedFunctions`
    )\b

  experimental_functions: |-
    (?x)
    \b(?:
      `experimentalFunctions`
    )\b

  nb_code_styles: (Input)


contexts:

  main:
    - include: declarations
    - include: expressions

  expressions:
    - include: pattern
    - include: expressions-nopattern

  expressions-nopattern:
    - include: comments
    - include: literals
    - include: shorthand
    - include: operators
    - include: pattern-short
    - include: scoping
    - include: variable
    - include: nested

  comments:
    - match: '(\(\*\s*)(::)([[:alnum:]]+)(::)(\s*\*\))'
      captures:
        1: comment.line.wolfram
        2: constant.numeric.line-number.find-in-files
        3: constant.language.wolfram
        4: constant.numeric.line-number.find-in-files
        5: comment.line.wolfram
    - match: \(\*
      push: comment-block

  comment-block:
      - meta_scope: comment.block.wolfram
      - match: \(\*
        push: comment-block
      - match: \*\)
        pop: true

  literals:
    - match: (?:\d+\.?|\.\d)\d*\<*"`"*>{0,2}
      scope: constant.numeric.wolfram
    - match: \"
      scope: punctuation.definition.string.begin
      push:
        - meta_scope: string.quoted.wolfram
        - match: \"
          scope: punctuation.definition.string.end
          pop: true
        - match: \\\[\w+\]
          scope: constant.character.escape.wolfram
        - match: \\[()!*]
          scope: keyword.operator.wolfram
        - match: \\[^()!*]
          scope: constant.character.escape.wolfram
        - match: (?<=[\s\"\<*"`"*>])\<*"`"*>\w*\<*"`"*>
          scope: constant.other.placeholder.wolfram

  shorthand:
    - match: (::)\s*([[:alnum:]]+)
      captures:
        1: keyword.operator.MessageName.wolfram
        2: string.unquoted.wolfram
    # ENHANCEMENT: infix
    - match: (//)\s*({{identifier}})
      captures:
        1: keyword.operator.Postfix.wolfram
        3: variable.function.wolfram

  operators:
    - match: (@\*|@{1,3}|\/[@*])
      scope: keyword.operator.call.wolfram
    - match: (\/\/?\.)
      scope: keyword.operator.replace.wolfram
    - match: (===|=!=|==|!=|>=|<=|<(?!\|)|(?<!\|)>)
      scope: keyword.operator.comparison.wolfram
    - match: (!|\|\||&&)
      scope: keyword.operator.logical.wolfram
    - match: (:?=|\/:|[-:]>|[+\-*/]=|<->)
      scope: keyword.operator.assignment.wolfram
    - match: '\/;'
      scope: keyword.operator.condition.wolfram
    - match: (\+\+|--|[+\-*/])
      scope: keyword.operator.arithmetic.wolfram
    - match: (>>>?|<<<?)
      scope: keyword.operator.flow.wolfram
    - match: (<>|~~)
      scope: keyword.operator.string.wolfram
    - match: \.\.\.?
      scope: keyword.operator.repeat.wolfram
    - match: ';;'
      scope: keyword.operator.span.wolfram
    - match: ';'
      scope: keyword.operator.compound.wolfram
    - match: \\\[[[:alnum:]]+\]
      scope: keyword.operator.word.wolfram
    - match: '&'
      scope: keyword.operator.function.wolfram

  pattern-short:
    # Including Blank, BlankSequence, BlankNullSequence
    # Can also be matched with Pattern, PatternTest, Optional
    - match: ({{identifier}})?(_{1,3})(({{identifier}})?)
      scope: variable.parameter.wolfram
      push:
        - meta_scope: meta.pattern.blank.wolfram
        - match: (?:\s*)(\?)
          captures:
            1: keyword.operator.PatternTest.wolfram
          pop: true
        - match: (?:\s*)(:)(?=[^:>=])
          captures:
            1: keyword.operator.Optional.wolfram
          pop: true
        - match: (?=.)
          pop: true

  pattern:
    - match: '({{identifier}})\s*(:(?=[^:>=]))'
      captures:
        1: variable.parameter.wolfram
        3: keyword.operator.Pattern.wolfram
      push:
        - meta_content_scope: meta.pattern.wolfram
        - match: \?
          scope: keyword.operator.PatternTest.wolfram
        - match: ':(?=[^:>=])'
          scope: keyword.operator.Optional.wolfram
          pop: true
        # we should check the precedence here
        - match: (?=[:-]>|:?=|\/[;.\/]|[\]\)\},;&]|>>|<<)
          pop: true
        - include: expressions-nopattern

  #function:
  #  - match: ({{identifier}})\s*(\[(?!\[))
  #    captures:
  #      1: variable.function.wolfram
  #      3: punctuation.section.brackets.begin.wolfram
  #    push:
  #      - meta_scope: meta.block.wolfram
  #      - match: \]
  #        scope: punctuation.section.brackets.end.wolfram
  #        pop: true
  #      - include: expressions
  #  - match: ({{identifier}})(?=\s*(@\*|@{1,3}|\/[@*]))
  #    scope: variable.function.wolfram

  variable:
    - match: '(?:System<*"`"*>)?({{built_in_functions}})'
      scope: variable.function
    - match: '(?:System<*"`"*>)?({{obsolete_functions}})'
      scope: invalid.deprecated.wolfram
    - match: '(?:System<*"`"*>)?({{undocumented_functions}})'
      scope: invalid.undocumented.wolfram
    - match: '(?:System<*"`"*>)?({{experimental_functions}})'
      scope: invalid.experimental.wolfram
    - match: '{{identifier}}'
      scope: variable.other
    - match: (#[a-zA-Z][[:alnum:]]*|#\d*)
      scope: variable.parameter

  scoping:
    - match: (Block|Module|With|Function)\s*(\[(?!\[))
      captures:
        1: variable.function.scoping.wolfram
        2: punctuation.section.brackets.begin.wolfram
      push:
        - meta_content_scope: meta.block.wolfram
        - match: '\{'
          set: [localized, local]
        - match: '\]'
          scope: punctuation.section.brackets.end.wolfram
          pop: true
        - include: expressions

  localized:
    - meta_content_scope: meta.block.local.wolfram
    - match: '\,'
      push: local
    - match: '\}'
      set:
        - meta_content_scope: meta.block.wolfram
        - match: '\]'
          scope: punctuation.section.brackets.end.wolfram
          pop: true
        - include: expressions
    - match: '\]'
      pop: true
    - include: expressions

  local:
    - match: '{{identifier}}'
      scope: variable.parameter.wolfram
      pop: true
    - match: (?=[\,|\}])
      pop: true
    - include: expressions


  declarations:
    - match: |-
        (?x)
        {{identifier}}
        (?=
          \s*
          (
            \[(?!\[)
            (?>
              [^\[\]]+|
              \g<-1>
            )*
            \]
          )
          \s*(?:\/;.*)?\s*:=
        )
      scope: entity.name.function
      push:
        - match: \[
          scope: punctuation.section.brackets.begin.wolfram
          push:
            - meta_scope: meta.arguments.wolfram
            - match: \]
              scope: punctuation.section.brackets.end.wolfram
              pop: true
        - match: (?=[^\[])
          pop: true
    - match: ((?:{{symbol}}<*"`"*>)*(\${{symbol}}))(?=\s*:?=)
      scope: entity.name.constant.wolfram

  # sequence:
  #   - meta_scope: meta.sequence.wolfram
  #   - match: \,\s*
  #     scope: punctuation.separator.sequence.wolfram
  #   - include: expressions

  nested:
    - match: \,
      scope: punctuation.separator.sequence.wolfram
    - match: \(
      scope: punctuation.section.parens.begin.wolfram
      push:
        - meta_scope: meta.parens.wolfram
        - match: \)
          scope: punctuation.section.parens.end.wolfram
          pop: true
        - include: expressions
    - match: \[\s*\[
      scope: punctuation.section.parts.begin.wolfram
      push:
        - meta_scope: meta.parts.wolfram
        - match: \]\s*\]
          scope: punctuation.section.parts.end.wolfram
          pop: true
        - include: expressions
    - match: \[
      scope: punctuation.section.brackets.begin.wolfram
      push:
        - meta_scope: meta.brackets.wolfram
        - match: \]
          scope: punctuation.section.brackets.end.wolfram
          pop: true
        - include: expressions
    - match: \{
      scope: punctuation.section.braces.begin.wolfram
      push:
        - meta_scope: meta.braces.wolfram
        - match: \}
          scope: punctuation.section.braces.end.wolfram
          pop: true
        - include: expressions
    - match: <\|
      scope: punctuation.section.association.begin.wolfram
      push:
        - meta_scope: meta.association.wolfram
        - match: \|>
          scope: punctuation.section.association.end.wolfram
          pop: true
        - include: expressions
